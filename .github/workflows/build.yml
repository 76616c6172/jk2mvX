name: Build

on:
  workflow_dispatch:
  push:
    branches: actions
  pull_request:
    branches: actions

jobs:
  vs2019:
    name: Build VS 2019, ${{ matrix.build_type }}, ${{ matrix.arch }}
    runs-on: windows-2019
    strategy:
      matrix:
        build_type: [Debug, RelWithDebInfo]
        arch: [Win32, x64]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build/actions

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build/actions
      run: cmake $GITHUB_WORKSPACE -A ${{ matrix.arch }}

    - name: Build
      working-directory: ${{github.workspace}}/build/actions
      shell: bash
      run: cmake --build . --config ${{ matrix.build_type }}

    - uses: 'actions/upload-artifact@v2'
      with:
        name: Windows Binaries, ${{ matrix.build_type }}, ${{ matrix.arch }}
        path: |
          ${{github.workspace}}/build/actions/out/Release/*
          ${{github.workspace}}/build/actions/out/Debug/*

  vs2017_xp:
    name: Build VS 2017, Windows XP
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build/actions

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build/actions
      run: cmake $GITHUB_WORKSPACE -A Win32 -T v141_xp

    - name: Build
      working-directory: ${{github.workspace}}/build/actions
      shell: bash
      run: cmake --build . --config RelWithDebInfo

    - uses: 'actions/upload-artifact@v2'
      with:
        name: Windows Binaries, Windows XP
        path: |
          ${{github.workspace}}/build/actions/out/Release/*
          ${{github.workspace}}/build/actions/out/Debug/*

  macos:
    name: Build macOS AppleClang, ${{ matrix.portable }}
    runs-on: macos-10.15
    env:
        DEVELOPER_DIR: /Applications/Xcode_11.7.app/Contents/Developer
    strategy:
      matrix:
        portable: [-DBuildPortableVersion=ON, -DBuildPortableVersion=OFF]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - name: Create Build Environment
      run: |
        brew install sdl2
        mkdir -p ${{github.workspace}}/build/actions

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build/actions
      run: cmake -G "Unix Makefiles" -DUseInternalLibs=ON ${{ matrix.portable }} $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{github.workspace}}/build/actions
      shell: bash
      run: make

    - name: Package
      working-directory: ${{github.workspace}}/build/actions
      shell: bash
      run: make package

    - uses: 'actions/upload-artifact@v2'
      with:
        name: macOS Binaries, ${{ matrix.portable }}
        path: |
          ${{github.workspace}}/build/actions/out/Release/*
          ${{github.workspace}}/build/actions/out/Debug/*

    - uses: 'actions/upload-artifact@v2'
      with:
        name: macOS Package, ${{ matrix.portable }}
        path: |
          ${{github.workspace}}/build/actions/out/*.tar.gz
          ${{github.workspace}}/build/actions/out/*.dmg

  linux:
    name: Build Linux, ${{ matrix.options }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        options: [-DUseInternalLibs=ON -DBuildPortableVersion=ON, -DUseInternalLibs=OFF -DBuildPortableVersion=OFF]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0

    - name: Create Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install git zip wget libfuse2 build-essential libsdl2-dev libgl1-mesa-dev libopenal-dev libjpeg-dev libpng-dev libminizip-dev
        mkdir -p ${{github.workspace}}/build/actions

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build/actions
      run: cmake ${{ matrix.options }} $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{github.workspace}}/build/actions
      shell: bash
      run: make

    - name: Package
      working-directory: ${{github.workspace}}/build/actions
      shell: bash
      run: make package

    - uses: 'actions/upload-artifact@v2'
      with:
        name: Linux Binaries, ${{ matrix.options }}
        path: |
          ${{github.workspace}}/build/actions/out/Release/*
          ${{github.workspace}}/build/actions/out/Debug/*

    - uses: 'actions/upload-artifact@v2'
      with:
        name: Linux Package, ${{ matrix.options }}
        path: |
          ${{github.workspace}}/build/actions/out/*.tar.gz
          ${{github.workspace}}/build/actions/out/*.deb
          ${{github.workspace}}/build/actions/out/*.rpm
